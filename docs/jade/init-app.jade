extend _base

block content
  div.docs-wrap
    include _sidenav
    div.docs-content
      h1 初始化应用
      p 你已经有了基本的页面布局和需要用的CSS以及JS文件。现在我们需要初始化我们的应用，比如在 <code>my-app.js</code>中
      pre.
        <code>var myApp = new Framework7();</code>
      p 上面这个例子中我们使用了 <code>myApp</code> 作为变量名存储 Framework7 初始化之后的实例。
      p 这样初始化非常简单，但是Framework7 也提供了更多个性化的定制，只需要在初始化的时候传入一个配置对象即可。
      pre
        code.
          var myApp = new Framework7({
              pushState: true,
              swipePanel: 'left',
              // ... other parameters
          });
      p 下面是这个变量的列表：
      table.params-table.
        <thead>
          <tr>
            <th>Parameter</th>
            <th>Type</th>
            <th>Default</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th colspan="4">Caching</th>
          </tr>
          <tr>
            <td>cache</td>
            <td>boolean</td>
            <td>true</td>
            <td>As Framework7 uses Ajax to load HTML content for pages it is good to use caching, especially if your content in those pages updates not very often.</td>
          </tr>
          <tr>
            <td>cacheDuration</td>
            <td>number</td>
            <td>1000*60*10</td>
            <td>Duration in ms (milliseconds) while app will use cache instead of loading page with another Ajax request. By default it takes 10 minutes.</td>
          </tr>
          <tr>
            <td>cacheIgnore</td>
            <td>array</td>
            <td>[]</td>
            <td>Array of URLs (string) that should not be cached by Framework7</td>
          </tr>
          <tr>
            <td>cacheIgnoreGetParameters</td>
            <td>boolean</td>
            <td>false</td>
            <td>If "true" then URLs like "about.html?id=2" and "about.html?id=3" will be treated and cached like single "about.html" page</td>
          </tr>
          <tr>
            <th colspan="4">Fast clicks library</th>
          </tr>
          <tr>
            <td>fastClicks</td>
            <td>boolean</td>
            <td>true</td>
            <td>Fast clicks is a built-in library that removes 300ms delay from links and form elements in mobile browser while you click them. You can disable this built-in library if you want to use other third party fast clicks script.</td>
          </tr>
          <tr>
            <th colspan="4">Navigation</th>
          </tr>
          <tr>
            <td>ajaxLinks</td>
            <td>string</td>
            <td>undefined</td>
            <td>By default (when this parameter is not specified) Framework7 will load all links (&lt;a&gt;) using Ajax. You can change this behavior by passing here CSS selector string for links that should be loaded with Ajax, like <code>"a.ajax"</code> - only all links with "ajax" class</td>
          </tr>
          <tr>
            <td>externalLinks</td>
            <td>array</td>
            <td>['external']</td>
            <td>Array of class names and "rel" attributes for links that should be treated as external and shouldn't be handled by Framework7. For example such ['external'] value will match to links like &lt;a href="somepage.html" class="external"&gt; and &lt;a href="somepage.html" rel="external"&gt;</td>
          </tr>
          <tr>
            <td>animateNavBackIcon</td>
            <td>boolean</td>
            <td>false</td>
            <td>This option (when enabled) gives more native look for dynamic navbar left back-link icon animation. Useful only when you use dynamic navbar with default back-link icon on left side set as "sliding".</td>
          </tr>
          <tr>
            <td>animatePages</td>
            <td>boolean</td>
            <td>true</td>
            <td>Set to false if you want to disable animated transitions between pages</td>
          </tr>
          <tr>
            <td>preloadPreviousPage</td>
            <td>boolean</td>
            <td>true</td>
            <td>Enable/disable preloading of previous page when you go deep in navigation. Should be enabled for correct work of "swipe back page" feature.</td>
          </tr>
          <tr>
            <th colspan="4">Push State</th>
          </tr>
          <tr>
            <td>pushState</td>
            <td>boolean</td>
            <td>false</td>
            <td>If you develop web app (not PhoneGap or Home Screen web app) it is useful to enable hash navigation (browser url will look like "http://my-webapp.com/#/about.html"). User as well will be able to navigate through app's history by using browser's default back and forward buttons. </td>
          </tr>
          <tr>
            <td>pushStateSeparator</td>
            <td>string</td>
            <td>'#!/'</td>
            <td>Push state URL separator, can be changed for something like '#page/' and then your push state urls will look like "http://myapp.com/#page/about.html"</td>
          </tr>
          <tr>
            <td>pushStateRoot</td>
            <td>string</td>
            <td>undefined</td>
            <td>Push state root URL separator, for example "http://my-app.com/". It is useful only in case when you use empty ("") pushStateSeparator </td>
          </tr>
          <tr>
            <td>pushStateNoAnimation</td>
            <td>boolean</td>
            <td>false</td>
            <td>If false then it will inherit View's animatePages parameter. If true, then push state navigation will happen without animation (page transitions)</td>
          </tr>
          <tr>
            <th colspan="4">Swipe back</th>
          </tr>
          <tr>
            <td>swipeBackPage</td>
            <td>boolean</td>
            <td>true</td>
            <td>Enable/disable ability to swipe back from left edge of screen to get to the previous page.</td>
          </tr>
          <tr>
            <td>swipeBackPageThreshold</td>
            <td>number</td>
            <td>0</td>
            <td>Value in px. Swipe back action will start if "touch distance" will be more than this value.</td>
          </tr>
          <tr>
            <td>swipeBackPageActiveArea</td>
            <td>number</td>
            <td>30</td>
            <td>Value in px. Width of invisible left edge of the screen that triggers swipe back action</td>
          </tr>
          <tr>
            <td>swipeBackPageBoxShadow</td>
            <td>boolean</td>
            <td>true</td>
            <td>Enable/disable box-shadow animation during swipe back action. You can disable it to improve performance</td>
          </tr>
          <tr>
            <th colspan="4">Sortable Lists</th>
          </tr>
          <tr>
            <td>sortable</td>
            <td>boolean</td>
            <td>true</td>
            <td>If you don't use sortable lists you can disable it for potentially better performance.</td>
          </tr>
          <tr>
            <th colspan="4">Swipeout</th>
          </tr>
          <tr>
            <td>swipeout</td>
            <td>boolean</td>
            <td>true</td>
            <td>If you don't use swipeouts you can disable this feature for potentially better performance.</td>
          </tr>
          <tr>
            <td>swipeoutNoFollow</td>
            <td>boolean</td>
            <td>false</td>
            <td>Fallback option for potentially better performance on old/slow devices. If you enable it, then swipeout item will not follow your finger during touch, it will be automatically opened/closed on swipe left/right. </td>
          </tr>
          <tr>
            <th colspan="4">Side Panels</th>
          </tr>
          <tr>
            <td>swipePanel</td>
            <td>string</td>
            <td>false</td>
            <td>Disabled by default. If you want to enable ability to open side panels with swipe you can pass here "left" (for left panel) or "right" (for right panel).</td>
          </tr>
          <tr>
            <td>swipePanelActiveArea</td>
            <td>number</td>
            <td>false</td>
            <td>Value in px. Width of invisible edge from the screen that triggers swipe panel</td>
          </tr>
          <tr>
            <td>swipePanelNoFollow</td>
            <td>boolean</td>
            <td>false</td>
            <td>Fallback option for potentially better performance on old/slow devices. If you enable it, then side panel will not follow your finger during touch, it will be automatically opened/closed on swipe left/right.</td>
          </tr>
          <tr>
            <td>swipePanelThreshold</td>
            <td>number</td>
            <td>0</td>
            <td>Value in px. Panel will not move with swipe if "touch distance" will be less than this value.</td>
          </tr>
          <tr>
            <td>panelsCloseByOutside</td>
            <td>boolean</td>
            <td>true</td>
            <td>Enable/disable ability to close panel by clicking outside of panel (on panel's overlay)</td>
          </tr>
          <tr>
            <td>panelsVisibleZIndex</td>
            <td>number</td>
            <td>6000</td>
            <td>CSS z-index property for panel</td>
          </tr>
          <tr>
            <th colspan="4">Modals</th>
          </tr>
          <tr>
            <td>modalTitle</td>
            <td>string</td>
            <td>'Framework7'</td>
            <td>Default title for modals (Alert, Confirm, Prompt)</td>
          </tr>
          <tr>
            <td>modalButtonOk</td>
            <td>string</td>
            <td>'OK'</td>
            <td>Default text for modal's "OK" button</td>
          </tr>
          <tr>
            <td>modalButtonCancel</td>
            <td>string</td>
            <td>'Cancel'</td>
            <td>Default text for modal's "Cancel" button</td>
          </tr>
          <tr>
            <td>modalPreloaderTitle</td>
            <td>string</td>
            <td>'Loading... '</td>
            <td>Default text for preloader modal</td>
          </tr>
          <tr>
            <td>modalCloseByOutside</td>
            <td>boolean</td>
            <td>false</td>
            <td>Enable/disable ability to close modal (Alert, Confirm, Prompt) by clicking outside of modal (on modal's overlay)</td>
          </tr>
          <tr>
            <td>actionsCloseByOutside</td>
            <td>boolean</td>
            <td>true</td>
            <td>The same as previous but for Action Sheet modal</td>
          </tr>
          <tr>
            <td>popupCloseByOutside</td>
            <td>boolean</td>
            <td>true</td>
            <td>The same as previous but for Popup modal</td>
          </tr>
          <tr>
            <td>modalTemplate</td>
            <td>string</td>
            <td>Look below*</td>
            <td>Full HTML template for modals (like alert, confirm and prompt)</td>
          </tr>
          <tr>
            <td>modalActionsTemplate</td>
            <td>string</td>
            <td>'&lt;div class="actions-modal"&gt;{{buttons}}&lt;/div&gt;'</td>
            <td>HTML template for Action Sheet. Could be useful if you want to add some custom elements to Action Sheet layout.</td>
          </tr>
          <tr>
            <td>modalUsernamePlaceholder</td>
            <td>string</td>
            <td>'Username'</td>
            <td>Place holder text for username input in Login Modal</td>
          </tr>
          <tr>
            <td>modalPasswordPlaceholder</td>
            <td>string</td>
            <td>'Password'</td>
            <td>Place holder text for password input in Login and Password Modals</td>
          </tr>
          <tr>
            <th colspan="4">Smart Select</th>
          </tr>
          <tr>
            <td>smartSelectBackTemplate</td>
            <td>string</td>
            <td>'&lt;div class="left sliding"&gt;&lt;a href="#" class="back link"&gt;&lt;i class="icon icon-back-blue"&gt;&lt;/i&gt;&lt;span&gt;{{backText}}&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;'</td>
            <td>Smart select page navbar back link HTML template</td>
          </tr>
          <tr>
            <td>smartSelectBackText</td>
            <td>string</td>
            <td>'Back'</td>
            <td>Default back link text for Smart Select's page navbar</td>
          </tr>
          <tr>
            <td>smartSelectSearchbar</td>
            <td>boolean</td>
            <td>false</td>
            <td>Set to true if you want to enable Search Bar for all Smart Selects</td>
          </tr>
          <tr>
            <td>smartSelectBackOnSelect</td>
            <td>boolean</td>
            <td>false</td>
            <td>If enabled then smart select page will be automatically closed after user picks any option</td>
          </tr>
          <tr>
            <th colspan="4">Search Bar</th>
          </tr>
          <tr>
            <td>searchbarHideDividers</td>
            <td>boolean</td>
            <td>true</td>
            <td>If enabled, then search will consider item dividers and group titles and hide them if there are no found items right after them</td>
          </tr>
          <tr>
            <td>searchbarHideGroups</td>
            <td>boolean</td>
            <td>true</td>
            <td>If enabled, then search will consider list view groups hide them if there are no found items inside of these groups</td>
          </tr>
          <tr>
            <th colspan="4">Notifications</th>
          </tr>
          <tr>
            <td>notificationTitle</td>
            <td>string</td>
            <td>undefined</td>
            <td>Default title for all notifications</td>
          </tr>
          <tr>
            <td>notificationSubtitle</td>
            <td>string</td>
            <td>undefined</td>
            <td>Default subtitle for all notifications</td>
          </tr>
          <tr>
            <td>notificationMedia</td>
            <td>string</td>
            <td>undefined</td>
            <td>Default media (icon or image) for all notifications</td>
          </tr>
          <tr>
            <td>notificationHold</td>
            <td>number</td>
            <td>undefined</td>
            <td>Default hold duration (in ms) for all notifications</td>
          </tr>
          <tr>
            <td>notificationCloseOnClick</td>
            <td>boolean</td>
            <td>false</td>
            <td>Set to true if you want to close notification on click by default</td>
          </tr>
          <tr>
            <td>notificationCloseIcon</td>
            <td>boolean</td>
            <td>true</td>
            <td>Set to true if you want to display close icon (button) for notifications by default</td>
          </tr>
          <tr>
            <th colspan="4">Status Bar</th>
          </tr>
          <tr>
            <td>statusbarOverlay</td>
            <td>boolean</td>
            <td>undefined</td>
            <td>With this option you can overwrite automatic <a href="status-bar.html">status bar detection</a></td>
          </tr>
          <tr>
            <th colspan="4">Page Callbacks</th>
          </tr>
          <tr>
            <td>onPageBeforeInit</td>
            <td>function(app, page)</td>
            <td>-</td>
            <td>Callback function that will be executed when Framework7 just inserts new page to DOM. Do the same as "pageBeforeInit" <a href="pages.html#page-events">page event</a></td>
          </tr>
          <tr>
            <td>onPageInit</td>
            <td>function(app, page)</td>
            <td>-</td>
            <td>Callback function that will be executed when Framework7 initialize required page's components and navbar. Do the same as "pageInit" <a href="pages.html#page-events">page event</a></td>
          </tr>
          <tr>
            <td>onPageBeforeAnimation</td>
            <td>function(app, page)</td>
            <td>-</td>
            <td>Callback function that will be executed when everything initialized and page (and navbar) is ready to be animated. Do the same as "pageBeforeAnimation" <a href="pages.html#page-events">page event</a></td>
          </tr>
          <tr>
            <td>onPageAfterAnimation</td>
            <td>function(app, page)</td>
            <td>-</td>
            <td>Callback function that will be executed after page (and navbar) animation. Do the same as "pageAfterAnimation" <a href="pages.html#page-events">page event</a></td>
          </tr>
          <tr>
            <td>onPageBeforeRemove</td>
            <td>function(app, page)</td>
            <td>-</td>
            <td>Callback function that will be executed right before page will be removed from DOM. Do the same as "pageBeforeRemove" <a href="pages.html#page-events">page event</a></td>
          </tr>
          <tr>
            <th colspan="4">Ajax Callbacks</th>
          </tr>
          <tr>
            <td>onAjaxStart</td>
            <td>function(xhr)</td>
            <td>-</td>
            <td>Callback function that will be executed in the beginning of Ajax request. This function accepts xhr data as an argument.</td>
          </tr>
          <tr>
            <td>onAjaxComplete</td>
            <td>function(xhr)</td>
            <td>-</td>
            <td>Callback function that will be executed after Ajax request. This function accepts xhr data as an argument.</td>
          </tr>
          <tr>
            <td>preprocess</td>
            <td>function(content, url, next)</td>
            <td>-</td>
            <td>This callback function allows you to modify loaded Ajax content right before it will be injected to DOM. As arguments this function receive "content" and "url" of the loaded page and "next" callback function. This option will be very useful if you are going to use some client-side template engine like "Handlebars", "Mustache", etc. After you modify content within this function you should return it: <code>return content</code></td>
          </tr>
          <tr>
            <th colspan="4">Namespace
              <p><strong>Attention! If you change following class names you will also need to change them in CSS!</strong></p>
            </th>
          </tr>
          <tr>
            <td>viewClass</td>
            <td>string</td>
            <td>'view'</td>
            <td>Class name for your View element</td>
          </tr>
          <tr>
            <td>viewMainClass</td>
            <td>string</td>
            <td>'view-main'</td>
            <td>Class name for your Main View element</td>
          </tr>
          <tr>
            <td>viewsClass</td>
            <td>string</td>
            <td>'views'</td>
            <td>Class name for your Views element</td>
          </tr>
          <tr>
            <th colspan="4">Init</th>
          </tr>
          <tr>
            <td>init</td>
            <td>boolean</td>
            <td>true</td>
            <td>By default Framework7 will be initialized automatically when you call <code>new Framework7()</code>. If you want to prevent this behavior you can disable it with this option and then initialize it manually with <code>myApp.init()</code> when you need it.</td>
          </tr>
        </tbody>
      p
        | * <strong>modalTemplate</strong> parameter contains full HTML layout for modals (like alert, confirm and prompt):</p>
      pre
        code.
          '&lt;div class="modal {{noButtons}}"&gt;' +
            '&lt;div class="modal-inner"&gt;' +
                '{{if title}}&lt;div class="modal-title"&gt;{{title}}&lt;/div&gt;{{/if title}}' +
                '&lt;div class="modal-text"&gt;{{text}}&lt;/div&gt;' +
                '{{afterText}}' +
            '&lt;/div&gt;' +
            '&lt;div class="modal-buttons"&gt;{{buttons}}&lt;/div&gt;' +
        '&lt;/div&gt;'
      p 最终你写在 <code>my-app.js</code> 中的代码可能会是这样的：
      pre
        code.
          var myApp = new Framework7({
              // Default title for modals
              modalTitle: 'My App',

              // If it is webapp, we can enable hash navigation:
              pushState: true,

              // Hide and show indicator during ajax requests
              onAjaxStart: function (xhr) {
                  myApp.showIndicator();
              },
              onAjaxComplete: function (xhr) {
                  myApp.hideIndicator();
              }
          });
      h2 预处理内容
      p Framework 可以让你用自己喜欢的客户端模板引擎，比如Handlebars 或者 mustache 等。
      p 下面看看如何在初始化应用的时候就使用 Handlebars 作为我们的客户端模板引擎。（你需要先在页面中引入 Handlerbars）
      pre
        code.
          var myApp = new Framework7({
              preprocess: function (content, url, next) {
                  if (url === 'people.html') {
                      var template = Handlebars.compile(content);
                      var resultContent = template({
                          title: 'People',
                          people: ['John', 'Ivan', 'Mary']
                      })
                      return resultContent;
                  }
              }
          });
      p <code>people.html</code> 内容如下:
      pre
        code.
          &lt;div class="navbar"&gt;
            &lt;div class="navbar-inner"&gt;
              &lt;div class="center"&gt;{{title}}&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="pages"&gt;
            &lt;div data-page="people" class="page"&gt;
              &lt;div class="page-content"&gt;
                &lt;ul&gt;
                  {{#each people}}
                  &lt;li&gt;{{this}}&lt;/li&gt;
                  {{/each}}
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
      p 有时候你会在预处理方法中有一些异步的逻辑，比如你用ajax来加载页面。这种情况下，我们提供了 "next" 回调函数，用来传入我们编译或者修改后的内容：
      pre
        code.
          var myApp = new Framework7({
              preprocess: function (content, url, next) {
                  if (url === 'people.html') {
                      // For example, we will retreive template JSON data using Ajax and only after that we will continue page loading process
                      $$.get('sometemplate.html', function(data) {
                          // Template
                          var template = Handlebars.compile(content);

                          // Compile content template with received JSON data
                          var resultContent = template(data);

                          // Now we call "next" callback function with result content
                          next(resultContent);
                      });
                      // Now we shouldn't return anything
                  }
              }
          });
      h2 下一步
      p 完成应用初始化之后，我们下一步需要做的是完成视图（Views）的初始化。
